<!DOCTYPE html>
<html>
<head>
  <title>Dashboard</title>
  <style>
  .modal {
  display: none;
  position: fixed;
  z-index: 10;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
}

.modal-content {
  background: #fff;
  margin: 5% auto;
  padding: 25px 30px;
  width: 500px;
  border-radius: 10px;
  font-family: Arial, sans-serif;
  box-shadow: 0 4px 10px rgba(0,0,0,0.2);
}

.form-title {
  font-size: 22px;
  font-weight: bold;
  margin-bottom: 15px;
  text-align: center;
  border-bottom: 1px solid #ddd;
  padding-bottom: 10px;
}

.section-heading {
  font-size: 16px;
  background: #f0f0f0;
  padding: 8px;
  border-radius: 5px;
  font-weight: bold;
  margin-bottom: 15px;
}

.owner-display {
  background: #f8f8f8;
  padding: 8px;
  margin: 8px 0 16px;
  border-radius: 4px;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 8px;
}

label {
  font-weight: 600;
  margin-bottom: 4px;
  display: block;
}

input, select {
  width: 100%;
  padding: 8px;
  margin-bottom: 15px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.row {
  display: flex;
  gap: 30px;
}

.half {
  flex: 1;
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  margin-top: 20px;
}

.btn {
  padding: 8px 14px;
  border: none;
  border-radius: 5px;
  font-weight: bold;
  cursor: pointer;
}

.btn.cancel {
  background: #e0e0e0;
  color: #333;
}

.btn.secondary {
  background: #d1e9ff;
  color: #007bff;
}

.btn.primary {
  background: #007bff;
  color: #fff;
}

/* //////////////////////////////////// */

/* Modal backdrop and content box */
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
  background-color: #fff;
  margin: 5% auto;
  border-radius: 6px;
  padding: 20px 30px;
  width: 80%;
  max-width: 800px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.modal-content h3 {
  border-bottom: 1px solid #ddd;
  padding-bottom: 10px;
  margin-bottom: 20px;
  font-size: 20px;
  color: #2c2c2c;
}

/* Inputs & selects */
.modal-content input[type="text"],
.modal-content input[type="number"],
.modal-content input[type="date"],
.modal-content input[type="file"],
.modal-content select,
.modal-content textarea {
  width: 100%;
  padding: 8px 10px;
  margin: 8px 0;
  border: 1px solid #d8dde6;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 14px;
}

.modal-content select {
  background-color: #fff;
}

/* Labels */
.modal-content label {
  font-weight: 600;
  margin-top: 10px;
  display: block;
  color: #3c3c3c;
}

/* Form rows */
.form-row {
  display: flex;
  gap: 10px;
  margin-bottom: 15px;
}
.form-row input {
  flex: 1;
}

/* Actions */
.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  margin-top: 20px;
}

.form-actions button {
  padding: 8px 16px;
  font-size: 14px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.form-actions button[type="button"] {
  background-color: #f4f6f9;
  color: #333;
}

.form-actions button[type="submit"] {
  background-color: #0070d2;
  color: white;
}

.form-actions button:hover {
  opacity: 0.9;
}


  
  #offerFields {
    display: none;
    max-width: 900px;
    margin: 20px auto;
    padding: 20px;
    border: 2px solid #ccc;
    border-radius: 10px;
    background: #f9f9f9;
    font-family: Arial, sans-serif;
  }

  #offerFields h3,
  #offerFields h4 {
    margin-top: 20px;
    margin-bottom: 10px;
    color: #333;
  }

  .form-row {
    display: flex;
    gap: 20px;
    margin-bottom: 15px;
    flex-wrap: wrap;
  }

  .form-row label {
    flex: 1;
    font-weight: bold;
  }

  .form-row input,
  .form-row textarea {
    flex: 1;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 5px;
    min-width: 0;
  }

  .form-row input[type="date"],
  .form-row input[type="number"] {
    flex: 1;
  }

  textarea[name="note"] {
    width: 100%;
    height: 100px;
    resize: vertical;
    margin-top: 10px;
  }

  /*  /////////////////////////////////////*/

/* General styling */
body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 20px;
  color: #2b2b2b;
  background-color: #f8f9fa;
}

.container {
  /* max-width: 1200px; */
  margin: 0 auto;
  padding: 0 15px;
}

/* Logo styling */
.logo-container {
  margin-bottom: 20px;
  padding-top: 10px;
}

.logo {
  height: 45px;
  width: auto;
}

/* Header and titles */
h3 {
  color: #2a5885;
  font-size: 1.3rem;
  margin: 15px 0 10px;
}

p strong {
  color: #444;
  font-weight: 600;
}

/* Navigation tabs */
/* Tab Navigation - Exact Match to Image */
.tabs {
  display: flex;
  border-bottom: 1px solid #d8dde6;
  margin: 15px 0 20px 0;
  padding-left: 0;
  list-style: none;
}

.tab {
  padding: 10px 20px;
  margin-right: 0;
  background-color: #f4f6f9;
  border: 1px solid #d8dde6;
  border-bottom: none;
  border-radius: 4px 4px 0 0;
  cursor: pointer;
  font-size: 0.85rem;
  color: #54698d;
  position: relative;
  bottom: -1px;
  font-weight: 400;
  transition: all 0.2s ease;
}

.tab.active {
  background-color: white;
  border-bottom: 1px solid white;
  margin-bottom: -1px;
  color: #16325c;
  font-weight: 700;
  border-color: #d8dde6 #d8dde6 white;
}

.tab:not(.active):hover {
  background-color: #eef1f6;
}

/* Header Section - Exact Match */
.header-section {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 15px;
}

.section-title {
  font-size: 1.25rem;
  color: #16325c;
  margin: 0 0 5px 0;
  font-weight: 600;
}

.subtitle {
  font-size: 0.9rem;
  color: #54698d;
  margin: 0;
  font-weight: 400;
}

/* Action Buttons - Right Aligned */
.actions {
  display: flex;
  gap: 8px;
  margin-bottom: 15px;
}

.button {
  padding: 8px 12px;
  background-color: #0070d2;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.8rem;
  font-weight: 600;
  transition: background-color 0.2s ease;
  height: 32px;
  display: inline-flex;
  align-items: center;
}

.button:hover {
  background-color: #005fb2;
}

/* Filter Info - Exact Match */
.filter-info {
  font-size: 0.8rem;
  color: #706e6b;
  margin: -10px 0 15px 0;
  font-style: normal;
  font-weight: 400;
}

/* Divider Line */
.divider {
  border-top: 1px solid #d8dde6;
  margin: 15px 0;
  width: 100%;
}
/* Table styling */
#dataTable {
  width: 100%;
  border-collapse: collapse;
  margin-top: 10px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  background-color: white;
}

#dataTable thead {
  background-color: #f5f7fa;
  border-bottom: 2px solid #e0e0e0;
}

#dataTable th {
  padding: 12px 15px;
  text-align: left;
  font-weight: 600;
  color: #444;
  font-size: 0.9rem;
  text-transform: uppercase;
}

#dataTable td {
  padding: 12px 15px;
  border-bottom: 1px solid #e0e0e0;
  font-size: 0.9rem;
}

#dataTable tr:not(:last-child) td {
  border-bottom: 1px solid #e0e0e0;
}

#dataTable tr:hover {
  background-color: #f5f7fa;
}

#dataTable a {
  color: #2a5885;
  text-decoration: none;
  font-weight: 500;
}

#dataTable a:hover {
  text-decoration: underline;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .container {
    padding: 0 10px;
  }
  
  .tabs {
    overflow-x: auto;
    white-space: nowrap;
    display: block;
    padding-bottom: 5px;
  }
  
  .tab {
    display: inline-block;
    margin-bottom: 5px;
  }
  
  .actions {
    justify-content: flex-start;
    flex-wrap: wrap;
    margin-top: 10px;
    margin-left: 0;
  }
  
  #dataTable {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
  }
  
  .logo {
    height: 38px;
  }
}

@media (max-width: 480px) {
  body {
    padding: 10px;
  }
  
  #dataTable th,
  #dataTable td {
    padding: 8px 10px;
    font-size: 0.8rem;
  }
  
  .button {
    padding: 6px 12px;
    font-size: 0.8rem;
  }
  
  .filter-info {
    font-size: 0.8rem;
  }
  
  .logo {
    height: 32px;
  }
}
</style>
  
</head>
<body>
  
  <!-- <button onclick="openForm1()">New</button>                                     -->

  <!-- Modal 1 -->
  <div id="form1" class="modal">
    <div class="modal-content">
      <form id="accountForm">
        <h2 class="form-title">New Opportunity</h2>
        <div class="form-section">
          <p class="section-heading">Opportunity Details</p>
  
          <label>Account Owner</label>
          <p class="owner-display"><img src="https://img.icons8.com/ios-filled/20/user.png"/> <%= user.name %></p>
  
          <label>*Company Name</label>
          <input type="text" name="company" required>
  
          <div class="row">
            <div class="half">
              <label>*Poc Name</label>
              <input type="text" name="poc" required>
            </div>
            <div class="half">
              <label>*Mobile Number</label>
              <input type="text" name="mobile" required>
            </div>
          </div>
  
          <div class="row">
            <div class="half">
              <label>*City</label>
              <input type="text" name="city" required>
            </div>
            <div class="half">
              <label>*Email Address</label>
              <input type="email" name="email" required>
            </div>
          </div>
  
          <label>*Type</label>
          <select name="type" required>
            <option value="">--None--</option>
            <option value="Customer - Direct">Customer - Direct</option>
            <option value="Regional Agency">Regional Agency</option>
          </select>
        </div>
  
        <div class="form-actions">
          <button type="button" onclick="closeAll()" class="btn cancel">Cancel</button>
          <button type="submit" onclick="submitForm1(event, 'save_new')" class="btn secondary">Save & New</button>
          <button type="submit" onclick="submitForm1(event, 'save')" class="btn primary">Save</button>
        </div>
      </form>
    </div>
  </div>
  
  <!-- Modal 2 -->                                                              
  <div id="form2" class="modal">
    <div class="modal-content">
      <!-- <form id="fullForm"> --><form id="fullForm" enctype="multipart/form-data">

        <input type="hidden" name="entry_id" value="">

        <h3>Next Action</h3>
        <label>Account Owner</label>
        <input type="text" value="<%= user.name %>" disabled>

        <div id="previewInfo"></div>

        <div class="form-group">
            <label>Action:</label>
            <select name="action" id="actionSelect" required onchange="handleActionChange(this.value)">
              <option value="">Select</option>
              <option value="Send Proposal">Send Proposal</option>
              <option value="Send Follow-up Email">Send Follow-up Email</option>
              <option value="Send Offer">Send Offer</option>
              <option value="Send Tax Invoice">Send Tax Invoice</option>                             
              <option value="Closed Won">Closed Won</option>                          
            </select>                                                                                                    
          </div>                                                                                           

          <div id="proposalFields" style="display:none;">
            <label>Email Subject:</label>
            <input type="text" name="email_subject" />
            <label>Email Body:</label>
            <textarea name="email_body"></textarea>
          </div>
          
          <div id="followupFields" style="display:none;">
            <label>Follow-up Email Subject:</label>
            <input type="text" name="followup_email_sub" />
            <label>Follow-up Email Body:</label>
            <textarea name="followup_email_body"></textarea>
          </div>


          <div id="offerFields">                                                

            <div class="form-row">
              <label>Start Date:</label>
              <input type="date" name="start_date" id="start_date"  />
          
              <label>Duration (Days):</label>
              <input type="number" name="duration" id="duration"  oninput="calculateEndDate()" />
              <br>
            <p> <input type="text" name="end_date" id="end_date" readonly /> </p> 
          
              
             
            </div>          
            <div class="component-block">

              <h4>Residential</h4>
              <div class="form-row">
                <input type="number" name="residential_screen" placeholder="Screens" class="screen" data-type="r" />
                <input type="number" name="r_per_screen" placeholder="Per Screen Rate" class="rate" data-type="r" />
                <input type="number" name="r_plan" placeholder="Plan Days" class="plan" data-type="r" />
                <span class="result" id="r_result">₹0</span>
              </div>
            
              <h4>Corporate</h4>
              <div class="form-row">
                <input type="number" name="corporate_screen" placeholder="Screens" class="screen" data-type="c" />
                <input type="number" name="c_per_screen" placeholder="Per Screen Rate" class="rate" data-type="c" />
                <input type="number" name="c_plan" placeholder="Plan Days" class="plan" data-type="c" />
                <span class="result" id="c_result">₹0</span>
              </div>
            
              <h4>Outdoor</h4>
              <div class="form-row">
                <input type="number" name="outdur_screen" placeholder="Screens" class="screen" data-type="o" />
                <input type="number" name="o_per_screen" placeholder="Per Screen Rate" class="rate" data-type="o" />
                <input type="number" name="o_plan" placeholder="Plan Days" class="plan" data-type="o" />
                <span class="result" id="o_result">₹0</span>
              </div>
            
              <hr />
              <div><strong>Total Amount:</strong> <span id="total_amount">₹0</span></div>
            
            </div>
                               
          
            <label>Note:</label>
            <div class="form-row">
              <textarea name="note" placeholder="Enter note..."></textarea>
            </div>
          </div>

          <div id="closedWonFields" style="display:none;">
            <label>*Amount:</label>
            <input type="number" name="amount"  />
          
            <label>*Purchase Order/Email Confirmation (PDF only):</label>
            <input type="file" name="confirmation_pdf" accept="application/pdf"  />
          </div>
          





          <!-- Tax Invoice Fields -->
<div id="taxInvoiceFields" style="display: none; margin-top: 20px;">
  <h3>Tax Invoice Details</h3>
  <input type="text" name="invoice_no" placeholder="Invoice No"  />
  <input type="date" name="invoice_date" placeholder="Invoice Date"  />
  <input type="text" name="po_no" placeholder="PO No." />
  <input type="date" name="po_date" placeholder="PO Date" />
  <input type="text" name="GST_No" placeholder="GST_No" />
  <input type="text" name="pan_No" placeholder="pan_No" />
  <input type="Website" name="Website" placeholder="Website" />




 
  <input type="text" name="place_of_supply" placeholder="Place of Supply" />
  <input type="text" name="payment_terms" placeholder="Payment Terms" />
  <input type="text" name="ack_no" placeholder="Acknowledgment No." />
  <input type="date" name="ack_date" placeholder="Acknowledgment Date" />
  <input type="text" name="irn" placeholder="IRN" />
  <input type="text" name="spoc" placeholder="SPOC" />
  <textarea name="billing_address" placeholder="Billing Address"></textarea>
  <div class="form-row">
    <label>Start Date:</label>
    <input type="date" name="start_date" id="start_datee"  />

    <label>Duration (Days):</label>
    <input type="number" name="duration" id="durationn"  oninput="InvoicecalculateEndDate()" />
    <br>
  <p> <input type="text" name="end_date" id="end_datee" readonly /> </p> 

    
   
  </div>          
  <h4>Residential</h4>
  <div class="form-row">
    <input type="number" name="residential_screen" placeholder="Screens" class="screen" data-type="r" />
    <input type="number" name="r_per_screen" placeholder="Per Screen Rate" class="rate" data-type="r" />
    <input type="number" name="r_plan" placeholder="Plan Days" class="plan" data-type="r" />
    <span class="result" id="r_result">₹0</span>
  </div>
  
  <h4>Corporate</h4>
  <div class="form-row">
    <input type="number" name="corporate_screen" placeholder="Screens" class="screen" data-type="c" />
    <input type="number" name="c_per_screen" placeholder="Per Screen Rate" class="rate" data-type="c" />
    <input type="number" name="c_plan" placeholder="Plan Days" class="plan" data-type="c" />
    <span class="result" id="c_result">₹0</span>
  </div>
  
  <h4>Outdoor</h4>
  <div class="form-row">
    <input type="number" name="outdur_screen" placeholder="Screens" class="screen" data-type="o" />
    <input type="number" name="o_per_screen" placeholder="Per Screen Rate" class="rate" data-type="o" />
    <input type="number" name="o_plan" placeholder="Plan Days" class="plan" data-type="o" />
    <span class="result" id="o_result">₹0</span>
  </div>
  
  
  
  <label>Note:</label>
  <div class="form-row">
    <textarea name="note" placeholder="Enter note..."></textarea>
  </div>

  
                                                                                                                           
  <!-- You already have screen fields, just reuse here or conditionally show -->  
</div>


        <!-- Hidden inputs -->
        <input type="hidden" name="company">                                                                                                                                                                                                                                                                                                            
        <input type="hidden" name="poc">                                                    
        <input type="hidden" name="mobile">
        <input type="hidden" name="city">
        <input type="hidden" name="email">                          
        <input type="hidden" name="type">                                               

        <div class="form-actions">
          <button type="button" onclick="closeAll()">Cancel</button>                            
          <button type="submit">Save</button>
        </div>                                                                          
      </form>
    </div>
  </div>


  <div class="container">
   
    
    <div class="logo-container">
      <a href="/">
        <img src="https://www.aekads.com/images/Footerlogo.png" alt="aekads logo" class="logo">
      </a>
    </div>
    
    
  <!-- Tabs Navigation -->
<div class="tabs">
  <div class="tab active">Home</div>
  <div class="tab">By Employees</div>
  <div class="tab">By City</div>
  <div class="tab">Accounts</div>
  <div class="tab">Reports</div>
</div>

<div class="divider"></div>

<!-- Header Section -->                                                 
<div class="header-section">                                                        
  <div>                                                                   
    <h3 class="section-title">Opportunities</h3>
    <p class="subtitle"><strong>All Employees</strong></p>
     <!-- <p class="filter-info">3 items - Sorted by Opportunity Name - Filtered by All Employees - Updated 4 minutes ago</p> -->
  </div>
  
  <div class="actions">
    <button class="button" onclick="openForm1()">New</button>
    <button class="button">Import</button>
    <button class="button">Export</button>
  </div>
</div>                                
    
    <div class="filter-info">
      3 items - Sorted by Opportunity Name - Filtered by All Employees - Updated 4 minutes ago
    </div>
    
                                                                            
    
    <table id="dataTable">
      <thead>
        <tr>
          <th>#</th>
          <th>Opportunity Name</th>
          <th>City</th>
          <th>Stage</th>
          <th>Phone</th>
          <th>Type</th>
          <th>Account Owner</th>
        </tr>
      </thead>
      <tbody>
        <% enquiries.forEach((row, index) => { %>
          <tr>
            <td><%= index + 1 %></td>
            <td>
              <a href="/enquiry/<%= row.id %>"><%= row.name %></a>
            </td>
            <td><%= row.city %></td>
            <td><%= row.action_type || '-' %></td>
            <td><%= row.mobile_number %></td>             
            <td><%= row.customer_type %></td>
            <td><%= row.account_owner %></td>
            <td>
              <button class="edit-btn btn btn-primary" 
                data-entry='<%- JSON.stringify(row) %>'>
                Edit
              </button>
            </td>
          </tr>                                                     
        <% }) %>                                  
      </tbody>                                                    
    </table>                                                                                                                     
    </div>                                                                                       

 
<!-- Edit Modal -->
<div id="editModal" style="
  display: none;
  position: fixed;
  top: 10%;
  left: 20%;
  width: 60%;
  max-height: 80vh; /* limits the modal height */
  overflow-y: auto; /* enables vertical scroll if needed */               
  background: #fff;
  border: 1px solid #ccc;
  padding: 20px;
  z-index: 1000;
">
  <form id="editForm" enctype="multipart/form-data">
    <input type="hidden" name="entry_id" id="entry_id">

    <!-- Stage 1 -->
    <div id="stage1">
      <h3>Stage 1 - Basic Info</h3>
      <label>Account Owner: <input type="text" name="account_owner" id="account_owner" readonly></label><br>
      <label>Opportunity Name: <input type="text" name="name" id="name"></label><br>
      <label>POC Name: <input type="text" name="poc_name" id="poc_name"></label><br>
      <label>Mobile Number: <input type="text" name="mobile_number" id="mobile_number"></label><br>
      <label>City: <input type="text" name="city" id="city"></label><br>
      <label>Email: <input type="email" name="email" id="email"></label><br>
      <!-- <label>Customer Type: <input type="text" name="customer_type" id="customer_type"></label><br> -->

      <label>Customer Type:
  <select name="customer_type" id="customer_type">
    <option value="">-- Select --</option>
    <option value="Customer - Direct">Customer - Direct</option>
    <option value="Regional Agency">Regional Agency</option>
  </select>
</label><br>


      <button type="button" id="nextBtn">Next</button>
    </div>

    <!-- Stage 2 -->
    <div id="stage2" style="display: none;">
      <h3>Stage 2 - Action Type & Details</h3>
      <label>Action Type:
        <select name="action_type" id="action_type">
          <option value="">Select</option>
          <option value="Send Proposal">Send Proposal</option>
          <option value="Send Follow-up Email">Send Follow-up Email</option>
          <option value="Send Offer">Send Offer</option>
          <option value="Send Tax Invoice">Send Tax Invoice</option>
          <option value="Closed Won">Closed Won</option>
        </select>
      </label><br><br>

      <!-- Send Proposal -->
      <div class="conditionalFields" id="sendProposalFieldsedit" style="display:none;">
        <label>Email Subject: <input type="text" name="email_subject"></label><br>
        <label>Email Body: <textarea name="email_body"></textarea></label><br>
      </div>

      <!-- Follow-up Email -->
      <div class="conditionalFields" id="followupFieldsedit" style="display:none;">
        <label>Follow-up Email Subject: <input type="text" name="followup_email_sub"></label><br>
        <label>Follow-up Email Body: <textarea name="followup_email_body"></textarea></label><br>
      </div>



      <!-- Send Offer -->   
  <div id="sendOfferFieldsedit" class="conditionalFields" style="display: none;">
  <label>Start Date:
    <input type="date" name="start_date" id="offer_start_date">
  </label><br>

  <label>Duration (Days):
    <input type="number" name="duration" id="offer_duration">
  </label><br>

  <label>End Date:
    <input type="text" name="end_date" id="offer_end_date" readonly>
  </label><br>

  <h4>Residential</h4>
  <input type="number" name="residential_screen" id="residential_screen_edit" placeholder="Screens">
  <input type="number" name="r_per_screen" id="r_per_screen_edit" placeholder="Per Screen Rate">
 <select name="r_plan" id="r_plan_edit">
  <option value="720">720 Days</option>
  <option value="360">360 Days</option>
</select>
  <span id="r_result_edit">₹0</span><br>

  <h4>Corporate</h4>
  <input type="number" name="corporate_screen" id="corporate_screen_edit" placeholder="Screens">
  <input type="number" name="c_per_screen" id="c_per_screen_edit" placeholder="Per Screen Rate">
 <select name="c_plan" id="c_plan_edit">
  <option value="720">720 Days</option>
  <option value="360">360 Days</option>
</select>

  <span id="c_result_edit">₹0</span><br>

  <h4>Outdoor</h4>
  <input type="number" name="outdur_screen" id="outdur_screen_edit" placeholder="Screens">
  <input type="number" name="o_per_screen" id="o_per_screen_edit" placeholder="Per Screen Rate">
  <select name="o_plan" id="o_plan_edit">
  <option value="720">720 Days</option>
  <option value="360">360 Days</option>
</select>
  <span id="o_result_edit">₹0</span><br>

  <label>Note:<br>
    <textarea name="note" id="offer_note" placeholder="Enter note..."></textarea>
  </label><br>
</div>







      <!-- Send Tax Invoice -->                                               
      <div class="conditionalFields" id="taxInvoiceFieldsedit" style="display:none;">
        <label>Invoice No: <input type="text" name="invoice_no"></label><br>
        <label>Invoice Date: <input type="date" name="invoice_date"></label><br>
        <label>PO No: <input type="text" name="po_no"></label><br>
        <label>PO Date: <input type="date" name="po_date"></label><br>
       <label>GST No: <input type="text" name="gst_no" id="gst_no"></label><br>
<label>PAN No: <input type="text" name="pan_no" id="pan_no"></label><br>
<label>Website: <input type="text" name="website" id="website"></label><br>
        <label>Place of Supply: <input type="text" name="place_of_supply"></label><br>
        <label>Payment Terms: <input type="text" name="payment_terms"></label><br>
        <label>Acknowledgment No: <input type="text" name="ack_no"></label><br>
        <label>Acknowledgment Date: <input type="date" name="ack_date"></label><br>
        <label>IRN: <input type="text" name="irn"></label><br>
        <label>SPOC: <input type="text" name="spoc"></label><br>
        <label>Billing Address:<br><textarea name="billing_address"></textarea></label><br>

       <label>Start Date: <input type="date" name="start_date" id="start_dateee" onchange="InvoicecalculateEndDateedit()"></label><br>
<label>Duration (Days): <input type="number" name="duration" id="durationnn" oninput="InvoicecalculateEndDateedit()"></label><br>
<label>End Date: <input type="text" name="end_date" id="end_dateee" readonly></label><br>

     <h4>Residential</h4>
<input type="number" name="residential_screen" id="res_screen" placeholder="Screens">
  <input type="number" name="r_per_screen" id="res_rate" placeholder="Rate">
<!-- Residential Plan -->
<select name="r_plan" id="res_plan">
  <option value="">Select Plan</option>
  <option value="720">720 Days</option>
  <option value="360">360 Days</option>
</select><br>


<span id="res_result">₹0</span><br>

<h4>Corporate</h4>
 <input type="number" name="corporate_screen" id="corp_screen" placeholder="Screens">
  <input type="number" name="c_per_screen" id="corp_rate" placeholder="Rate">
  <!-- Corporate Plan -->
<select name="c_plan" id="corp_plan">
  <option value="">Select Plan</option>
  <option value="720">720 Days</option>
  <option value="360">360 Days</option>
</select><br>

<span id="corp_result">₹0</span><br>

<h4>Outdoor</h4>
<input type="number" name="outdur_screen" id="out_screen" placeholder="Screens">
  <input type="number" name="o_per_screen" id="out_rate" placeholder="Rate">
 <select name="o_plan" id="out_plan">
  <option value="">Select Plan</option>
  <option value="720">720 Days</option>
  <option value="360">360 Days</option>
</select><br>

<span id="out_result">₹0</span><br>


        <label>Note:<br><textarea name="note" placeholder="Enter note..."></textarea></label>
      </div>

      <!-- Closed Won -->
      <div class="conditionalFields" id="closedWonFieldsedit" style="display:none;">
        <label>Reason/Remarks: <textarea name="closed_won_remarks"></textarea></label><br>
        <label>Closure Date: <input type="date" name="closure_date"></label><br>
      </div>

      <br>
      <button type="submit" id="saveBtn">Save</button>
    </div>
  </form>
</div>

<style>
  .modall { position: fixed; top: 10%; left: 20%; width: 60%; background: #fff; border: 1px solid #ccc; padding: 20px; z-index: 1000; }
  .modal-contentt { display: flex; flex-direction: column; }
  .conditionalFields { display: none; margin-top: 10px; }
  </style>

<script>
  function closeModal() {
    document.getElementById("editModal").style.display = "none";
  }
  
   // Open modal and fill form
 // Open modal and fill form
document.querySelectorAll('.edit-btn').forEach(btn => {
  btn.addEventListener('click', async () => {
    const entryId = JSON.parse(btn.getAttribute('data-entry')).id;

    try {
      const response = await fetch(`/get-entry/${entryId}`);
      const data = await response.json();

      if (response.ok) {
        // Basic Fields
        document.getElementById('entry_id').value = data.id || '';
        document.getElementById('account_owner').value = data.account_owner || '';
        document.getElementById('name').value = data.name || '';
        document.getElementById('poc_name').value = data.poc_name || '';
        document.getElementById('mobile_number').value = data.mobile_number || '';
        document.getElementById('city').value = data.city || '';
        document.getElementById('email').value = data.email || '';
        document.getElementById('customer_type').value = data.customer_type || '';
        document.getElementById('action_type').value = data.action_type || '';

        // Hide all conditional fields first
        document.querySelectorAll(".conditionalFields").forEach(field => field.style.display = "none");

        // Show and populate based on action_type
        switch (data.action_type) {
          case "Send Proposal":
            document.getElementById("sendProposalFieldsedit").style.display = "block";
            document.querySelector('[name="email_subject"]').value = data.email_sub || '';
            document.querySelector('[name="email_body"]').value = data.email_body || '';
            break;

          case "Send Follow-up Email":
            document.getElementById("followupFieldsedit").style.display = "block";
            document.querySelector('[name="followup_email_sub"]').value = data.followup_email_sub || '';
            document.querySelector('[name="followup_email_body"]').value = data.followup_email_body || '';
            break;

          case "Send Offer":
            document.getElementById("sendOfferFieldsedit").style.display = "block";
            document.getElementById("offer_start_date").value = data.start_date || '';
            document.getElementById("offer_duration").value = data.duration || '';
            document.getElementById("offer_end_date").value = data.end_date || '';

            document.getElementById("residential_screen_edit").value = data.residential_screen || '';
            document.getElementById("r_per_screen_edit").value = data.r_per_screen || '';
            document.getElementById("r_plan_edit").value = data.r_plan || '';

            document.getElementById("corporate_screen_edit").value = data.corporate_screen || '';
            document.getElementById("c_per_screen_edit").value = data.c_per_screen || '';
            document.getElementById("c_plan_edit").value = data.c_plan || '';

            document.getElementById("outdur_screen_edit").value = data.outdur_screen || '';
            document.getElementById("o_per_screen_edit").value = data.o_per_screen || '';
            document.getElementById("o_plan_edit").value = data.o_plan || '';

            document.getElementById("offer_note").value = data.note || '';
            break;

          case "Send Tax Invoice":
            document.getElementById("taxInvoiceFieldsedit").style.display = "block";

            document.querySelector('[name="invoice_no"]').value = data.invoice_no || '';
            document.querySelector('[name="invoice_date"]').value = data.invoice_date || '';
            document.querySelector('[name="po_no"]').value = data.po_no || '';
            document.querySelector('[name="po_date"]').value = data.po_date || '';
            document.getElementById("gst_no").value = data.gst_no || '';
            document.getElementById("pan_no").value = data.pan_no || '';
            document.getElementById("website").value = data.website || '';
            document.querySelector('[name="place_of_supply"]').value = data.place_of_supply || '';
            document.querySelector('[name="payment_terms"]').value = data.payment_terms || '';
            document.querySelector('[name="ack_no"]').value = data.ack_no || '';
            document.querySelector('[name="ack_date"]').value = data.ack_date || '';
            document.querySelector('[name="irn"]').value = data.irn || '';
            document.querySelector('[name="spoc"]').value = data.spoc || '';
            document.querySelector('[name="billing_address"]').value = data.billing_address || '';

            document.getElementById("start_dateee").value = data.start_date || '';
            document.getElementById("durationnn").value = data.duration || '';
            document.getElementById("end_dateee").value = data.end_date || '';

            document.getElementById("res_screen").value = data.residential_screen || '';
            document.getElementById("res_rate").value = data.r_per_screen || '';
            document.getElementById("res_plan").value = data.r_plan || '';

            document.getElementById("corp_screen").value = data.corporate_screen || '';
            document.getElementById("corp_rate").value = data.c_per_screen || '';
            document.getElementById("corp_plan").value = data.c_plan || '';

            document.getElementById("out_screen").value = data.outdur_screen || '';
            document.getElementById("out_rate").value = data.o_per_screen || '';
            document.getElementById("out_plan").value = data.o_plan || '';

            document.querySelector('#taxInvoiceFieldsedit textarea[name="note"]').value = data.note || '';
            break;

          case "Closed Won":
            document.getElementById("closedWonFieldsedit").style.display = "block";
            document.querySelector('[name="closed_won_remarks"]').value = data.closed_won_remarks || '';
            document.querySelector('[name="closure_date"]').value = data.closure_date || '';
            break;
        }

        // Show Modal
        document.getElementById("editModal").style.display = "block";
      }
    } catch (err) {
      console.error("Error fetching entry:", err);
    }
  });
});


// Form submission (Save button clicked)
document.getElementById('editForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  const saveButton = document.getElementById('saveBtn');
  saveButton.disabled = true;

  const formData = new FormData(document.getElementById('editForm'));
  const updatedData = {};

  formData.forEach((value, key) => {
    updatedData[key] = value;
  });

  const entryId = document.getElementById('entry_id').value;

  try {
    const response = await fetch(`/update-entry/${entryId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(updatedData),
    });

    const result = await response.json();

    if (response.ok) {
      alert('Data updated successfully');
      document.getElementById('editModal').style.display = 'none';
    } else {
      alert('Failed to update data');
    }
  } catch (err) {
    console.error(err);
    alert('An error occurred while saving');
  } finally {
    saveButton.disabled = false;
  }
});



document.getElementById("nextBtn").addEventListener("click", function () {
    document.getElementById("stage1").style.display = "none";
    document.getElementById("stage2").style.display = "block";
  });



  
  document.getElementById("action_type").addEventListener("change", function () {
  const type = this.value;

  // Hide all conditional sections
  document.querySelectorAll(".conditionalFields").forEach(field => field.style.display = "none");

  if (type === "Send Proposal") {
    document.getElementById("sendProposalFieldsedit").style.display = "block";
  } else if (type === "Send Follow-up Email") {
    document.getElementById("followupFieldsedit").style.display = "block";
  } else if (type === "Send Offer") {
    document.getElementById("sendOfferFieldsedit").style.display = "block";
  } else if (type === "Send Tax Invoice") {
    document.getElementById("taxInvoiceFieldsedit").style.display = "block";
  } else if (type === "Closed Won") {
    document.getElementById("closedWonFieldsedit").style.display = "block";
  }
});

 function InvoicecalculateEndDateedit() {
  const start = document.getElementById("start_dateee").value;
  const duration = parseInt(document.getElementById("durationnn").value || 0);

  if (start && duration) {
    const startDate = new Date(start);
    startDate.setDate(startDate.getDate() + duration);
    const endDate = startDate.toISOString().split('T')[0];
    document.getElementById("end_dateee").value = endDate;
  } else {
    document.getElementById("end_dateee").value = "";
  }
}


  
// Total amount calculation
 // Calculate amount = screens * rate * plan for each category
function calculate(section) {
  const screens = parseInt(document.getElementById(`${section}_screen`).value) || 0;
  const rate = parseFloat(document.getElementById(`${section}_rate`).value) || 0;
  const plan = parseInt(document.getElementById(`${section}_plan`).value) || 0;

  const result = document.getElementById(`${section}_result`);

  if (plan > 0) {
    const totalCost = screens * rate;
    const per30DayRate = (totalCost / plan) * 30;
    result.textContent = `₹${per30DayRate.toFixed(2)}`;
  } else {
    result.textContent = `₹0.00`;
  }
}

// Attach input listeners
['res', 'corp', 'out'].forEach(section => {
  ['screen', 'rate', 'plan'].forEach(field => {
    const input = document.getElementById(`${section}_${field}`);
    input.addEventListener('input', () => calculate(section));
  });
});
function calculateAmountEdit() {
    // Residential
    const rScreens = Number(document.getElementById('residential_screen_edit').value) || 0;
    const rRate = Number(document.getElementById('r_per_screen_edit').value) || 0;
    const rPlan = Number(document.getElementById('r_plan_edit').value) || 1; // prevent divide by zero
    const rTotal = ((rScreens * rRate) / rPlan) * 30;
    document.getElementById('r_result_edit').textContent = `₹${rTotal.toFixed(2)}`;

    // Corporate
    const cScreens = Number(document.getElementById('corporate_screen_edit').value) || 0;
    const cRate = Number(document.getElementById('c_per_screen_edit').value) || 0;
    const cPlan = Number(document.getElementById('c_plan_edit').value) || 1;
    const cTotal = ((cScreens * cRate) / cPlan) * 30;
    document.getElementById('c_result_edit').textContent = `₹${cTotal.toFixed(2)}`;

    // Outdoor
    const oScreens = Number(document.getElementById('outdur_screen_edit').value) || 0;
    const oRate = Number(document.getElementById('o_per_screen_edit').value) || 0;
    const oPlan = Number(document.getElementById('o_plan_edit').value) || 1;
    const oTotal = ((oScreens * oRate) / oPlan) * 30;
    document.getElementById('o_result_edit').textContent = `₹${oTotal.toFixed(2)}`;
  }

  // Attach listeners
  [
    'residential_screen_edit', 'r_per_screen_edit', 'r_plan_edit',
    'corporate_screen_edit', 'c_per_screen_edit', 'c_plan_edit',
    'outdur_screen_edit', 'o_per_screen_edit', 'o_plan_edit'
  ].forEach(id => {
    const el = document.getElementById(id);
    if (el) {
      el.addEventListener('input', calculateAmountEdit);
    }
  });






  function calculateEndDate() {
  const start = document.getElementById("offer_start_date").value;
  const duration = parseInt(document.getElementById("offer_duration").value || 0);

  if (start && duration) {
    const startDate = new Date(start);
    startDate.setDate(startDate.getDate() + duration);
    const end = startDate.toISOString().split('T')[0];
    document.getElementById("offer_end_date").value = end;
  }
}



  
  document.getElementById("offer_start_date").addEventListener("change", calculateEndDate);
  document.getElementById("offer_duration").addEventListener("input", calculateEndDate);

 
  </script>                                                                                                 























  <script>  

  


function handleActionChange(value) {
  document.getElementById('proposalFields').style.display = (value === 'Send Proposal') ? 'block' : 'none';
  document.getElementById('followupFields').style.display = (value === 'Send Follow-up Email') ? 'block' : 'none';
  document.getElementById('offerFields').style.display = (value === 'Send Offer') ? 'block' : 'none';
  document.getElementById('closedWonFields').style.display = (value === 'Closed Won') ? 'block' : 'none';
  document.getElementById('taxInvoiceFields').style.display = (value === 'Send Tax Invoice') ? 'block' : 'none';
}

function calculateEndDate() {
  const startDate = document.getElementById("offer_start_date").value;
  const duration = parseInt(document.getElementById("offer_duration").value) || 0;

  if (startDate && duration) {
    const start = new Date(startDate);
    start.setDate(start.getDate() + duration);
    const endDate = start.toISOString().split('T')[0];
    document.getElementById("offer_end_date").value = endDate;
  } else {
    document.getElementById("offer_end_date").value = "";
  }
}

function InvoicecalculateEndDate() {
  const startDate = document.getElementById('start_datee').value;
  const duration = parseInt(document.getElementById('durationn').value);
  if (startDate && duration) {
    const start = new Date(startDate);
    start.setDate(start.getDate() + duration);
    const endDate = start.toISOString().split('T')[0];
    document.getElementById('end_datee').value = endDate;
  }
}

    function openForm1() {
      document.getElementById('form1').style.display = 'block';
    }

    function closeAll() {
      document.getElementById('form1').style.display = 'none';
      document.getElementById('form2').style.display = 'none';
      document.getElementById('accountForm').reset();
      document.getElementById('fullForm').reset();
      document.getElementById('emailFields').classList.add('hidden');
    }
    let currentEntryId = null;

function submitForm1(event, mode) {
  event.preventDefault();

  const form1 = document.getElementById('accountForm');
  const formData = new FormData(form1);

  fetch('/save-entry', {
    method: 'POST',
    body: new URLSearchParams(formData)
  }).then(res => res.json())
    .then(data => {
      if (data.id) {
        currentEntryId = data.id;

        const company = formData.get("company");
        const poc = formData.get("poc");
        const mobile = formData.get("mobile");
        const city = formData.get("city");
        const email = formData.get("email");
        const type = formData.get("type");

        document.getElementById('previewInfo').innerHTML = `                                            
          <p><strong>Company:</strong> ${company}</p>
          <p><strong>POC:</strong> ${poc}</p>
          <p><strong>Mobile:</strong> ${mobile}</p>
          <p><strong>City:</strong> ${city}</p>
          <p><strong>Email:</strong> ${email}</p>                               
        `;

        const form2 = document.getElementById('fullForm');
        form2.company.value = company;
        form2.poc.value = poc;
        form2.mobile.value = mobile;
        form2.city.value = city;
        form2.email.value = email;
        form2.type.value = type;
        form2.entry_id.value = currentEntryId;

        if (mode === 'save') {
          document.getElementById('form1').style.display = 'none';
          document.getElementById('form2').style.display = 'block';
        } else if (mode === 'save_new') {
          form1.reset();
          alert('Saved! You can add another entry now.');
        }
      } else {
        alert('Failed to save.');
      }
    });
}

    function toggleEmailFields() {
      const selected = document.getElementById('actionSelect').value;
      const emailFields = document.getElementById('emailFields');
      emailFields.classList.toggle('hidden', selected !== 'Send Proposal');
    }

    document.getElementById('fullForm').addEventListener('submit', function (e) {
  e.preventDefault();
  const form = e.target;
  const formData = new FormData(form);






  fetch('/save-entry', {
    method: 'POST',
    body: new URLSearchParams(formData)
  }).then(res => {
    if (res.ok) {
      alert('Saved action successfully!');
      closeAll();
    } else {
      alert('Error saving action.');
    }
  });
});












const inputs = document.querySelectorAll('.screen, .rate, .plan');

inputs.forEach(input => {
  input.addEventListener('input', () => {
    const type = input.dataset.type;
    const screens = document.querySelector(`.screen[data-type="${type}"]`).value;
    const rate = document.querySelector(`.rate[data-type="${type}"]`).value;
    const plan = document.querySelector(`.plan[data-type="${type}"]`).value;

    const screensVal = parseFloat(screens) || 0;
    const rateVal = parseFloat(rate) || 0;
    const planVal = parseFloat(plan) || 0;

    let total = 0;

    if (screensVal > 0 && rateVal > 0 && planVal > 0) {
      const totalCost = screensVal * rateVal;
      const costPer30Days = (totalCost / planVal) * 30;
      total = costPer30Days.toFixed(2);
    }

    document.getElementById(`${type}_result`).textContent = `₹${total}`;
  });
});

document.querySelectorAll('.component-block').forEach(block => {
    const rows = block.querySelectorAll('.form-row');

    rows.forEach(row => {
      const inputs = row.querySelectorAll('input');
      const result = row.querySelector('.result');

      inputs.forEach(input => {
        input.addEventListener('input', () => {
          const screens = parseFloat(row.querySelector('.screen')?.value) || 0;
          const rate = parseFloat(row.querySelector('.rate')?.value) || 0;
          const plan = parseFloat(row.querySelector('.plan')?.value) || 0;

          if (screens > 0 && rate > 0 && plan > 0) {
            const totalCost = screens * rate;
            const per30DayRate = (totalCost / plan) * 30;
            result.textContent = `₹${per30DayRate.toFixed(2)}`;
          } else {
            result.textContent = `₹0`;
          }
        });
      });
    });
  });
  </script>
</body>
</html>
